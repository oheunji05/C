#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>

// 2부터 100까지의 소수 출력
int prime(int n) {
	if (n < 2) {
		return 0;
	}
	for (int i = 2; i < n; i++) {
		if (n % i == 0)
			return 0;
	}
	return 1; //1이면 소수라는 뜻
}


int main() {
	for (int i = 2; i < 100; i++) {
		if (prime(i)) {
			printf("%4d", i);
		}
	}
  
	return 0;
}

//////////////////////////////////////////////////////////////////////////////////

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>

	//▶ 처리 조건
	//1) 1부터 입력되는 정수까지의 소수를 모두 구하여 출력한다.
	//▶ 입력 형식
	//	1) ‘숫자 : ’ 메시지를 출력 후 최대 1000까지의 정수 1개를 입력한다.
	//	2) 1000이상의 정수가 입력되면 처리를 하지 않으며, 다시 정수를 입력 받는다.
	//	3) 작업을 반복 수행한다.
	//	4) 2보다 작은 정수가 입력되면 프로그램을 종료한다.

	//	▶ 출력 형식
	//	1) 입력받은 다음 줄부터 출력한다.
	//	2) 소수를 한 줄에 10개씩 출력한다.
	//	3) 출력되는 소수는 전부 오른쪽 정렬이 되어야 한다.
	//	4) 작업과 작업 사이에는 빈 줄을 1개 삽입한다.


	//	▶ 입력과 출력의 예
	//	숫자 : 1004

	//	숫자 : 10
	//	2 3 5 7

	//	숫자 : 50
	//	2 3 5 7 11 13 17 19 23 29 
	//  31 37 41 43 47

	//	숫자 : 1

int isPrime(int n) {
	for (int i = 1; i <= n; i++) {
		if ((i != 1 && i != n) && n % i == 0) return 0;
	}
	return 1;
}

int main(void) {
	while (1) {
		int n;
		printf("숫자 : ");
		scanf("%d", &n);

		if (n < 2) {
			return 0;
		}

		if (n >= 1000) {
			printf("\n");
			continue;
		}

		int primeCnt = 1;
		for (int i = 2; i <= n; i++) {
			if (isPrime(i)) {
				printf("%d ", i);
				if (primeCnt == 10) {
					printf("\n");
					primeCnt = 1;
				}
				primeCnt++;
			}
		}
		printf("\n\n");
	}
	return 0;
}

